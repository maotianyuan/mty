import{_ as s,c as i,o as a,U as n}from"./chunks/framework.iGn5XQY6.js";const l="/mty/assets/curved-edge-triangle.bFu7OPNU.png",y=JSON.parse('{"title":"一、背景","description":"","frontmatter":{},"headers":[],"relativePath":"前端/其他/SVG 绘制一个圆角.md","filePath":"前端/其他/SVG 绘制一个圆角.md","lastUpdated":1760702837000}'),t={name:"前端/其他/SVG 绘制一个圆角.md"},p=n('<h1 id="一、背景" tabindex="-1">一、背景 <a class="header-anchor" href="#一、背景" aria-label="Permalink to &quot;一、背景&quot;">​</a></h1><p>由于CSS clip-path生成的路径为纯直角, 为了实现圆角效果，我们通过叠加SVG矢量图形实现视觉增强。</p><ol><li>精准匹配底层挖洞区域形状</li><li>实现平滑的圆角过渡效果 <img src="'+l+`" alt="图片"></li></ol><h1 id="二、实现原理" tabindex="-1">二、实现原理 <a class="header-anchor" href="#二、实现原理" aria-label="Permalink to &quot;二、实现原理&quot;">​</a></h1><h3 id="_2-1-几何结构设计" tabindex="-1">2.1 几何结构设计 <a class="header-anchor" href="#_2-1-几何结构设计" aria-label="Permalink to &quot;2.1 几何结构设计&quot;">​</a></h3><p>关键特征点：</p><ul><li><p>直角顶点：左上角(0,0)</p></li><li><p>垂直边：左侧边(0,0)→(0,100)</p></li><li><p>凹陷曲线：左下角→右上角的贝塞尔曲线</p></li></ul><h3 id="_2-2-贝塞尔曲线原理" tabindex="-1">2.2 贝塞尔曲线原理 <a class="header-anchor" href="#_2-2-贝塞尔曲线原理" aria-label="Permalink to &quot;2.2 贝塞尔曲线原理&quot;">​</a></h3><p>采用二次贝塞尔曲线(Q指令)实现凹陷圆角：</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Q(controlX, controlY, endX, endY)</span></span></code></pre></div><p>控制点计算规则：</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>  控制点</span></span>
<span class="line"><span>   / \\</span></span>
<span class="line"><span>  /   ↘</span></span>
<span class="line"><span>起点    终点</span></span></code></pre></div><ul><li><p>控制点决定曲线弯曲程度</p></li><li><p>控制点与起点/终点的距离决定曲率半径</p></li></ul><h1 id="三、具体实现" tabindex="-1">三、具体实现 <a class="header-anchor" href="#三、具体实现" aria-label="Permalink to &quot;三、具体实现&quot;">​</a></h1><h3 id="_3-1-路径算法" tabindex="-1">3.1 路径算法 <a class="header-anchor" href="#_3-1-路径算法" aria-label="Permalink to &quot;3.1 路径算法&quot;">​</a></h3><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>// 尺寸与圆角比例系数</span></span>
<span class="line"><span>const RADIUS_RATIO = 0.2; </span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>private get pathData() {</span></span>
<span class="line"><span>  const size = this.size;</span></span>
<span class="line"><span>  const radius = size * RADIUS_RATIO;</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  return \`</span></span>
<span class="line"><span>    M 0 0</span></span>
<span class="line"><span>    L 0 \${size} </span></span>
<span class="line"><span>    Q \${radius} \${size - radius}, \${size} 0 </span></span>
<span class="line"><span>    L 0 0 Z</span></span>
<span class="line"><span>  \`;</span></span>
<span class="line"><span>}</span></span></code></pre></div><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>M 0 0            // 起点：左上角</span></span>
<span class="line"><span>L 0 \${size}      // 绘制垂直边到底部</span></span>
<span class="line"><span>Q \${cx} \${cy}    // 控制点坐标</span></span>
<span class="line"><span>  \${size} 0      // 曲线终点：右上角</span></span>
<span class="line"><span>L 0 0 Z          // 闭合路径</span></span></code></pre></div><h3 id="_3-2-动态控制点" tabindex="-1">3.2 动态控制点 <a class="header-anchor" href="#_3-2-动态控制点" aria-label="Permalink to &quot;3.2 动态控制点&quot;">​</a></h3><p>根据尺寸动态计算控制点：</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>           size</span></span>
<span class="line"><span>        +----------+</span></span>
<span class="line"><span>        |         /</span></span>
<span class="line"><span>        |        /</span></span>
<span class="line"><span>        |       / </span></span>
<span class="line"><span>radius  |      /  </span></span>
<span class="line"><span>        | 控制点●</span></span>
<span class="line"><span>        |   /</span></span>
<span class="line"><span>        |  /</span></span>
<span class="line"><span>        | /</span></span>
<span class="line"><span>        +</span></span></code></pre></div><ul><li><p>控制点X坐标：radius = size * 0.2</p></li><li><p>控制点Y坐标：size - radius</p></li><li><p>数学关系：形成45度切线，保证曲线平滑度</p></li></ul><h3 id="_3-3-组件封装" tabindex="-1">3.3 组件封装 <a class="header-anchor" href="#_3-3-组件封装" aria-label="Permalink to &quot;3.3 组件封装&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">import { </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">Component,</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> Prop,</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> Vue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } from &#39;vue-property-decorator&#39;;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">export const CURVED_EDGE_TRIANGLE_POS = [</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &#39;left-top&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &#39;left-bottom&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &#39;right-top&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &#39;right-bottom&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Component</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">export default class CurvedEdgeTriangle extends Vue {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 颜色属性</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  @Prop({</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) public readonly color!: string;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 尺寸属性</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @Prop({ </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) public readonly size!: number;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  private get pathData() {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    const</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> pointerSize</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> =</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> this.size</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> *</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 0.1;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    return</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> \`M</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 0</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 0</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> L</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 0</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> \${this.size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} Q \${</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">pointerSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} \${</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">pointerSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, \${</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">this.size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> L </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Z\`;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  private render() {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    return</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> (</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">      &lt;svg</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        width</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> =</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> {this.size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        height = {</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">this.size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;path d={</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">this.pathData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} fill={</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">this.color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} stroke=&#39;none&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/svg &gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,23),e=[p];function h(k,c,r,d,o,E){return a(),i("div",null,e)}const f=s(t,[["render",h]]);export{y as __pageData,f as default};
